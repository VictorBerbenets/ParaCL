// RUN: %paracl %s | FileCheck %s -dump-input=fail --check-prefix=INTERPRETER

// RUN: %paracl -oper-mode=compiler %s -o %t.ll
// RUN: cat %t.ll | FileCheck %s -dump-input=fail --check-prefix=CODEGEN

//---------------------------ParaCL code---------------------------------------

EmptyArr1 = array();
EmptyArr2 = repeat(100, 0);
EmptyArr3 = array(EmptyArr1, EmptyArr2, array());

Sz4 = 0;
EmptyArr4 = repeat(1, Sz4);

print 0;

//-----------------------------------------------------------------------------

// INTERPRETER: 0

// CODEGEN: %array = alloca [0 x i32], align 4
// CODEGEN: %array{{[[:digit:]]+}} = alloca [0 x i32], align 4
// CODEGEN: %array{{[[:digit:]]+}} = alloca [0 x i32], align 4

// CODEGEN: %Sz4 = alloca i32, align 4
// CODEGEN-NEXT: store i32 0, ptr %Sz4, align 4
// CODEGEN: %Sz46 = load i32, ptr %Sz4, align 4
// CODEGEN: %3 = mul i32 1, %Sz46
// CODEGEN: %mallocsize = mul i32 %3, 4
// CODEGEN: %4 = tail call ptr @malloc(i32 %mallocsize)
// CODEGEN: %array7 = alloca [1 x i32], align 4
// CODEGEN: call void @llvm.memcpy.p0.p0.i32(ptr align 4 %array7, ptr align 4 @0, i32 4, i1 false)
// CODEGEN: %5 = alloca i32, align 4
// CODEGEN: store i32 0, ptr %5, align 4
// CODEGEN: %6 = load i32, ptr %5, align 4
// CODEGEN: %7 = icmp slt i32 %6, %3
